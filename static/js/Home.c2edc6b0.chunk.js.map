{"version":3,"file":"static/js/Home.c2edc6b0.chunk.js","mappings":"8PAEaA,EAAc,SAACC,GAAgB,OAAKA,EAAMC,KAAM,E,0BCwG7D,EA9FuB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,KACjBC,GACEC,EAAAA,EAAAA,GAAeC,EAAAA,GADTC,EAAUH,EAAVG,WAAYC,EAAIJ,EAAJI,KAAMC,EAAKL,EAALK,MAAOC,EAAWN,EAAXM,YAAaC,EAAWP,EAAXO,YAAaC,EAAQR,EAARQ,SAE3DC,GAAuCR,EAAAA,EAAAA,GAAeN,GAA9CE,EAAKY,EAALZ,MAAOa,EAAWD,EAAXC,YAAaC,EAAMF,EAANE,OACtBC,ECfD,SAAqBC,EAAeC,GACzC,IAAAC,GAA4CC,EAAAA,EAAAA,UAAiBH,GAAMI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GAUxC,OARAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,YAAW,kBAAMH,EAAkBP,EAAM,GAAEC,GAAS,KAElE,OAAO,WACLU,aAAaF,EACf,CACF,GAAG,CAACT,EAAOC,IAEJK,CACT,CDG+BM,CAAYnB,EAAa,KAGtDoB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAV,EAAAA,EAAAA,GAAAQ,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAUC,EAAAA,QAAsB,GAChCC,EAAYD,EAAAA,QAAsB,GAiBxCA,EAAAA,WAAgB,WACd,GAAIC,EAAUC,QAAS,CACrB,IAAMC,EAAS,CACbC,KAAMC,OAAO9B,GACb+B,SAAUD,OAAOlC,GACjBoC,OAAQnC,EACRC,MAAOA,GAETyB,EAAgBK,EAClB,CACAF,EAAUC,SAAU,CACtB,GAAG,CAAC/B,EAAYC,EAAMC,EAAOE,IAG7ByB,EAAAA,WAAgB,WACd,GACEH,EAAaW,IAAI,SAEf,+CADDX,EAAaY,WAEd,CACA,IAAMN,EAASO,OAAOC,aAAWC,EAAAA,EAAAA,GAAKf,IACtC/B,GAAS+C,EAAAA,EAAAA,IAAWV,IACpBJ,EAAQG,SAAU,CACpB,CACF,GAAG,IAGHF,EAAAA,WAAgB,WACTD,EAAQG,SA5CG,WAChB,IAAMI,EAAWnC,EAAU,YAAA2C,OAAe3C,GAAe,GACnD4C,EAASnC,EAAoB,cAAAkC,OAAiBlC,GAAyB,GAC7Ed,GACEkD,EAAAA,EAAAA,GAAY,CACVD,OAAQA,EACRX,KAAMC,OAAO9B,GACb+B,SAAUA,EACVC,OAAQnC,EACRC,MAAOA,EACPG,SAAU6B,OAAO7B,KAGvB,CAgCIyC,GAEFlB,EAAQG,SAAU,CACpB,GAAG,CAACtB,EAAsBL,EAAaJ,EAAYC,EAAMC,IAGzD,IAAM6C,EAAiBlB,EAAAA,aAAkB,SAACmB,GACxCrD,GAASsD,EAAAA,EAAAA,IAAcD,GACzB,GAAG,IACGE,EAAarB,EAAAA,aAAkB,SAACsB,GACpCxD,GAASyD,EAAAA,EAAAA,IAAQD,GACnB,GAAG,IAKGE,GAAYZ,EAAAA,EAAAA,GAAI,IAAIa,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAC,OAAKC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,GAAMF,EAAK,IAChEG,EAASlE,EAAM6D,KAAI,SAACM,GAAI,OAAKH,EAAAA,EAAAA,KAACI,EAAAA,IAAUC,EAAAA,EAAAA,GAAA,GAAmBF,GAAbA,EAAKG,GAAgB,IAEzE,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EAC3BT,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CAAC3D,MAAOV,EAAY+C,eAAgBA,KAC/CW,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAAC5D,MAAOT,EAAMiD,WAAYA,QAEjCQ,EAAAA,EAAAA,KAAA,MAAIU,UAAU,iBAAgBD,SAAC,eAC9B3D,IAAW+D,EAAAA,EAAAA,OACVb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,KAEbd,EAAAA,EAAAA,KAAA,OAAKU,UAAU,iBAAgBD,SAC5B3D,IAAW+D,EAAAA,EAAAA,QAAiBlB,EAAYO,KAG7CF,EAAAA,EAAAA,KAACe,EAAAA,GAAe,CAACrE,YAAaA,EAAasE,MAAOC,KAAKC,KAAKrE,EAAcF,GAAWwE,WArBtE,SAAC5C,GAClBtC,GAASmF,EAAAA,EAAAA,IAAe7C,GAC1B,MAsBF,C","sources":["redux/items/selectors.ts","pages/Home.tsx","app/hooks/useDebounce.tsx"],"sourcesContent":["import { RootState } from \"./../store\";\r\n\r\nexport const selectItems = (state: RootState) => state.items;\r\n","import React from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks/hooks\";\r\nimport { useDebounce } from \"../app/hooks/useDebounce\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Categories, ErrorMessage, PaginationBlock, PizzaBlock, Skeleton, Sort } from \"../components\";\r\nimport { selectFilter } from \"../redux/filter/selectors\";\r\nimport { setCategoryId, setCurrentPage, setFilters, setSort } from \"../redux/filter/slice\";\r\nimport { QueryString, SortProperty } from \"../redux/filter/types\";\r\nimport { selectItems } from \"../redux/items/selectors\";\r\nimport { fetchPizzas } from \"../redux/items/asyncActions\";\r\nimport { Status } from \"../redux/items/types\";\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { categoryId, sort, order, searchValue, currentPage, pageSize } =\r\n    useAppSelector(selectFilter);\r\n  const { items, xTotalCount, status } = useAppSelector(selectItems);\r\n  const debouncedSearchValue = useDebounce(searchValue, 250); // Значение из поиска с задержкой в 250 мс\r\n\r\n  // Логика запроса пицц с бэкенда\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const isQuery = React.useRef<boolean>(false); // Есть ли запрос сейчас\r\n  const isMounted = React.useRef<boolean>(false); // Был ли первый render\r\n  const getPizzas = () => {\r\n    const category = categoryId ? `category=${categoryId}` : \"\";\r\n    const search = debouncedSearchValue ? `title_like=${debouncedSearchValue}` : \"\";\r\n    dispatch(\r\n      fetchPizzas({\r\n        search: search,\r\n        page: String(currentPage),\r\n        category: category,\r\n        sortBy: sort,\r\n        order: order,\r\n        pageSize: String(pageSize),\r\n      })\r\n    );\r\n  };\r\n\r\n  // Если изменили параметры и был первый render\r\n  React.useEffect(() => {\r\n    if (isMounted.current) {\r\n      const params = {\r\n        page: String(currentPage),\r\n        category: String(categoryId),\r\n        sortBy: sort,\r\n        order: order,\r\n      };\r\n      setSearchParams(params);\r\n    }\r\n    isMounted.current = true;\r\n  }, [categoryId, sort, order, currentPage]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // Если был первый render, то проверяем URL параметры и сохраняем их в redux\r\n  React.useEffect(() => {\r\n    if (\r\n      searchParams.has(\"page\") &&\r\n      (searchParams.toString() !==\r\n        \"page=1&category=0&sortBy=rating&order=desc\") // Data from filterSlice initial state\r\n    ) {\r\n      const params = Object.fromEntries([...searchParams]) as QueryString;\r\n      dispatch(setFilters(params));\r\n      isQuery.current = true;\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // Если был первый render, то запрашиваем пиццы\r\n  React.useEffect(() => {\r\n    if (!isQuery.current) {\r\n      getPizzas();\r\n    }\r\n    isQuery.current = false;\r\n  }, [debouncedSearchValue, currentPage, categoryId, sort, order]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n  const changeCategory = React.useCallback((idx: number) => {\r\n    dispatch(setCategoryId(idx));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const changeSort = React.useCallback((sortProperty: SortProperty) => {\r\n    dispatch(setSort(sortProperty));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  const changePage = (page: number) => {\r\n    dispatch(setCurrentPage(page));\r\n  };\r\n\r\n  const skeletons = [...new Array(6)].map((_, i) => <Skeleton key={i} />);\r\n  const pizzas = items.map((item) => <PizzaBlock key={item.id} {...item} />);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content__top\">\r\n        <Categories value={categoryId} changeCategory={changeCategory} />\r\n        <Sort value={sort} changeSort={changeSort} />\r\n      </div>\r\n      <h2 className=\"content__title\">All pizzas</h2>\r\n      {status === Status.ERROR ? (\r\n        <ErrorMessage />\r\n      ) : (\r\n        <div className=\"content__items\">\r\n          {status === Status.LOADING ? skeletons : pizzas}\r\n        </div>\r\n      )}\r\n      <PaginationBlock currentPage={currentPage} count={Math.ceil(xTotalCount / pageSize)} changePage={changePage} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useDebounce(value: string, delay?: number): string {\r\n  const [debouncedValue, setDebouncedValue] = useState<string>(value);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n"],"names":["selectItems","state","items","dispatch","useAppDispatch","_useAppSelector","useAppSelector","selectFilter","categoryId","sort","order","searchValue","currentPage","pageSize","_useAppSelector2","xTotalCount","status","debouncedSearchValue","value","delay","_useState","useState","_useState2","_slicedToArray","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","useDebounce","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","isQuery","React","isMounted","current","params","page","String","category","sortBy","has","toString","Object","fromEntries","_toConsumableArray","setFilters","concat","search","fetchPizzas","getPizzas","changeCategory","idx","setCategoryId","changeSort","sortProperty","setSort","skeletons","Array","map","_","i","_jsx","Skeleton","pizzas","item","PizzaBlock","_objectSpread","id","_jsxs","_Fragment","children","className","Categories","Sort","Status","ErrorMessage","PaginationBlock","count","Math","ceil","changePage","setCurrentPage"],"sourceRoot":""}